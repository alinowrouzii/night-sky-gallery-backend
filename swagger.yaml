openapi: 3.0.0

tags:
- name: 'Auth'
  description: ''
- name: 'Admin'
  description: ''
- name: 'Post'
  description: ''


paths:
  /auth/register:
    post:
      tags: 
        - 'Auth'
      summary: 'Create new new user'
      consumes:
      - 'application/json'
      produces:
      - 'application/json'
      requestBody:
        content:
          application/json:
            schema:
              type: 'object'
              properties:
                username:
                  type: string
                firstName:
                  type: string
                lastName:
                  type: string
                phoneNumber:
                  type: string
                role:
                  type: string
                  enum: [ADMIN, SUBSCRIBER]
                password:
                  type: string
                  description: password must be alphanumeric and at least 8 characters
            example:
              username: 'jesSmith'
              firstName: 'Jessica'
              lastName: 'Smith'
              phoneNumber: '09221234322'
              role: 'SUBSCRIBER'
              password: 'a12345678'
      responses:
        '201':
          description: 'User created successfully and should activate his account by confirmation code that sent to him.'
        '400':
          description: 'BAD REQUEST, It happens when all required input not entered or the format of phone number is wrong.'
        '500':
          description: 'Internal error, or in some case database error and it might be because of duplication of the phone number.'
        '409':
          description: 'CONFLICT, the username is already exist'
  
  /auth/confirmUser:
    post:
      tags:
        - 'Auth'
      summary: 'confirm user registration by confirmation code sent to him'
      consumes:
      - 'application/json'
      produces:
      - 'application/json'
      requestBody:
        content:
          application/json:
            schema:
              type: "object"
              properties:
                username:
                  type: string
                password:
                  type: string
                confirmationCode:
                  type: string
              required:
                - username
                - password
                - confirmationCode
              example:
                username: 'jesSmith'
                password: 'a12345678'
                confirmationCode: '123456'
      responses:
        '200':
          description: 'User account activated but if the role of user is ADMIN, he has to wait to become confirm by SUPER_ADMIN'
        '404': 
          description: 'User with that username not found'
        '400':
          description: 'confirmation code is wrong, or expired or User status not equal to PENDING, or maybe all required input not entered'
        '401':
          description: 'Wrong password'
        '500':
          description: 'Database error'

  /auth/sendCode:
    post:
      tags:
        - 'Auth'
      consumes:
      - 'application/json'
      produces:
      - 'application/json'

      requestBody:
        content:
          application/json:
            schema:
              type: 'object'
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
                - username
                - password
              example:
                username: 'jesSmith'
                password: 'a12345678'
      responses:
        '200':
          description: 'new confirmation code sent to the user. Just for test, the code exists in the response body'
        '403': 
          description: 'Account has been banned because of send confirmation code limitation. Each user can requests at most five time for new confirmation code.'
        '400':
          description: 'All input not entered, or confirmation code is still valid, or the user status not equal to PENDING'
        '404':
          description: 'User not found'
        '401':
          description: 'Wrong password'
        '500':
          description: 'Database error'
            
  /auth/login:
    post:
      tags:
        - 'Auth'
      summary: 'Login to account'
      consumes:
      - 'application/json'
      produces:
      - 'application/json'
      requestBody:
        content:
          application/json:
            schema:
              type: 'object'
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
                - username
                - password
              example:
                username: 'jesSmith'
                password: 'a12345678'
          
      responses:
        '200':
          description: 'Successful login'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

        '404': 
          description: 'User with that username not found'
        '400':
          description: 'All required input not entered'
        '403':
          description: 'User status is not eaual to ACCEPTED'
        '401':
          description: 'Wrong password'
        '500':
          description: 'Database error'
    
  /auth/logout:
    get:
      tags:
        - 'Auth'
      summary: 'Logout'
      produces:
      - 'application/json'
      responses:
        '200':
          description: 'Successful logout'
        '401':
          description: 'The User is not authenticated yet'

  /admin/:
    post:
      tags:
        - 'Admin'
      summary: 'Create new post by admin'
      consumes:
      - 'application/json'
      produces:
      - 'application/json'
      requestBody:
        content:
          multipart/form-data:
            schema:
              # $ref: '#/components/schemas/Post'
              type: object
              properties:
                title:
                  type: string
                caption:
                  type: string
                photo:
                  type: string
                  format: binary
                  description: 'Only jpg, jpeg and png are acceptable.'
              required:
                - title
                - caption
                - photo
            example:
              title: 'new post'
              caption: 'this is a caption'
      responses:
        '201':
          description: 'Post created successfully'
          content:
            application/json:
              schema:
                $ref: '#components/schemas/Post'
            
components:
  schemas:
    User:
      type: 'object'
      properties:
        _id:
          type: string
        username:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        phoneNumber:
          type: string
        createdAt: 
          type: string
      example:
        _id: '2839284398793849384'
        username: 'jesSmith'
        firstName: 'Jessica'
        lastName: 'Smith'
        phoneNumber: '09221234321'
        createdAt: '2021-09-03T16:27:39.128Z'
    Post:
      type: 'object'
      properties:
        _id:
          type: string
        title:
          type: string
        caption:
          type: string   
        photo:
          type: string       
        createdAt: 
          type: string
        prevPhotos:
          type: array
          items:
            tyoe: string
        comments:
          type: array
          items:
            type: object
        creator:
          type: object
      example:
        _id: '92830934823121'
        title: 'new post'
        caption: 'this is a caption'
        photo: 'new photo'
        createdAt: '2021-09-03T16:27:39.128Z'
        comments:
          - user:
              firstName: 'John'
              lastName: 'Doe'
              username: 'johnDoe'
            text: 'it was good post'
            createdAt: '2021-09-03T16:27:39.128Z'
            _id: '92830934823121'
          - user:
              firstName: 'jonatÿßan'
              lastName: 'barnett'
              username: 'jonBar'
            text: 'not bad'
            createdAt: '2021-09-03T16:27:39.128Z'
            _id: '92830934823121'

    Comment:
      type: 'object'
      properties:
        user:
          firstName:
            type: string
          lastName:
            type: string
          username:
            type: string
        text:
          type: string
        createdAt:
          type: string
        _id:
          type: string
      example:
        user:
          firstName: 'John'
          lastName: 'Doe'
          username: 'johnDoe'
        text: 'it was good post'
        createdAt: '2021-09-03T16:27:39.128Z'
        _id: '92830934823121'